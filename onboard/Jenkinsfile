

pipeline {
    agent { label 'master' }
    environment {
        orgName="${params.orgName}"
        jenkinsUrl="${params.teamName}.${params.jenkinsUrlPrefix}"
        repoConfig="${params.teamName}-jenkins-config"
        namespace="${params.teamName}-${params.costCenter}"
        cluster="${params.cluster}"
        tokenAuth="${params.gheTokenCreds}"
        region="${params.region}"
    }
    stages {
        stage("GHE Login") { 
            steps {
                script { 
                    withCredentials([string(credentialsId: tokenAuth, variable: 'TOKEN')]) {
                        sh """
                                echo ${TOKEN} > /tmp/token.txt
                                gh auth login --with-token < /tmp/token.txt
                        """
                    }
                }
            }
        }
        stage("Create jenkins config") { 
            steps {
                script { 
                    sh """
                        #!/bin/bash -vx
                        rm -rf ${WORKSPACE}/.git
                        gh repo view $orgName/$repoConfig || export exitcode=\$?
                        if [ \$exitcode -ne 0 ]; then 
                            gh repo create $orgName/$repoConfig -y --private
                            gh repo clone $orgName/$repoConfig || echo checkout already exist
                            cp -r  charts/jenkins/VALUES_SUMMARY.md $repoConfig/VALUES_SUMMARY.md
                            cp -r  onboard/Readme.md $repoConfig/Readme.md
                            sed  's/jenkins.example.com/${jenkinsUrl}/g'  charts/jenkins/values.yaml > $repoConfig/values.yaml
                            cd $repoConfig && git add VALUES_SUMMARY.md values.yaml && git commit -m "updating config code" && git push -u origin master
                        else
                            echo Repo already exist
                            gh repo clone $orgName/$repoConfig
                        fi
                    """
                }
            }
        }
        stage("Cluster Auth") { 
            steps {
                script { 
                    sh """
                        gcloud container clusters get-credentials ${cluster} --zone=${region}
                    """
                }
            }
        }
        stage("Install Jenkis") { 
            steps {
                script {                 
                    sh """
                        sed  's/NAMESPACE/${namespace}/g' onboard/namespace.yaml  > onboard/namespace-apply.yaml
                        sed  's/NAMESPACE/${namespace}/g' onboard/serviceaccount.yaml > onboard/serviceaccount-apply.yaml
                        
                        kubectl apply -f onboard/namespace-apply.yaml
                        kubectl apply -f onboard/serviceaccount-apply.yaml
                        kubectl config set-context --current --namespace=${namespace}
                        helm upgrade --install jenkins-${namespace} --values ${repoConfig}/values.yaml charts/jenkins/
                    """
                }
            }
        }
        stage("Email Details") { 
            steps {
                script {                 
                    echo "TODO: Email jenkins details to user"
                }
            }
        }
    }
    post {
        always {
            script {
                sh """
                   rm -rf  /tmp/token.txt
                   echo github logout
                   # gh auth logout
                """
            }
        }
    }
}



 