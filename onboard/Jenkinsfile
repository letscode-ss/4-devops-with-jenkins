

pipeline {
    agent { label 'agent' }
    environment {
        orgName="${params.orgName}"
        jenkinsUrl="${params.teamName}.${params.jenkinsUrlPrefix}"
        repoConfig="${params.teamName}-jenkins-config"
        namespace="${params.teamName}-${params.costCenter}"
    }
    stages {
        stage("GHE Login") { 
            steps {
                script { 
                    sh """
                        gh auth login --with-token < /tmp/token.txt
                    """
                }
            }
        }
        stage("Create jenkins config") { 
            steps {
                script { 
                    sh """
                        gh repo view $orgName/$repoConfig || export exitcode=\$?
                        if [ \$exitcode -ne 0 ]; then 
                            rm -rf .git
                            gh repo create $orgName/$repoConfig -y --private
                            cp -r  charts/jenkins/VALUES_SUMMARY.md $repoConfig/VALUES_SUMMARY.md
                            cp -r  charts/jenkins/values.yaml $repoConfig}/values.yaml
                            cd $repoConfig && git add VALUES_SUMMARY.md values.yaml && git commit -m "updating config code" && git push -u origin master
                        else
                            echo Repo already exist
                            gh repo clone $orgName/$repoConfig
                        fi
                    """
                }
            }
        }
        /*
        stage("Cluster Auth") { 
            steps {
                script { 
                    gcloud auth
                }
            }
        }*/
        stage("Install Jenkis") { 
            steps {
                script {                 
                    git url: "https://github.com/${orgName}/${repoConfig}.git"
                    sh """
                        sed -i s/NAMESPACE/${namespace}/g onboard/namespace.yaml
                        sed -i s/NAMESPACE/${namespace}/g onboard/serviceaccount.yaml
                        kubectl apply -f k8s-onboarding/namespace.yaml
                        kubectl apply -f k8s-onboarding/serviceaccount.yaml
                        helm upgrade --install jenkins-${namespace} --values ${repoConfig}/values.yaml charts/jenkins/
                    """
                }
            }
        }
    }
    post {
        always {
            script {
                sh """
                   echo gh logout
                   echo gh auth logout
                """
            }
        }
    }
}



 